#!/bin/bash
# Remember chmod +x make.sh
argv=$1
usage()
{
    printf "Usage:\nCompiler\t: $0 file.c\nConfigurer\t: sudo $0 -c\nSolutions\t: $0 -s <number>\nEndian system\t: $0 -e\n"
    exit 1
}

#   Command line option to configure the memory randomizer.
while getopts "ces" flag; do
    case "${flag}" in
        c)
            if ! [ $(id -u) = 0 ]; then
                echo "-c option must be run as root."
                exit
            fi
            echo 0 > /proc/sys/kernel/randomize_va_space
            echo "Done"
            exit 1
            ;;
        e)
            endian="$(echo -n I | od -to2 | head -n1 | cut -f2 -d" " | cut -c6)"
            if [ $endian == 0 ]; then
                echo "Big endian-system"
            elif [ $endian == 1 ]; then
                echo "Little endian-system"
            fi
            exit 1
            ;;
        s)
            if [ $2 == 0 ]; then
                echo "python3 -c \"print('A'* 87)\" | ./0wargame"
                echo "you have changed the 'modified' variable"
            elif [ $2 == 1 ]; then
                echo "./1wargame \`python3 -c \"print('dcba'* 87)\"\`"
                echo "you have correctly got the variable to the righ value"
            elif [ $2 == 2 ]; then
                echo "GREENIE=$(python -c 'print("\x0a\x0d\x0a\x0d"*18)') && export GREENIE && ./2wargame"
                echo "you have correctly modified the variable"
            else
                usage
            fi
            exit 1
            ;;
   esac
done

if [ $# -eq 0 ]; then
    usage
fi

# Remove the '.c' of the file.
output=${argv::-2}

gcc -fno-stack-protector -D_FORTIFY_SOURCE=0 -z norelro -z execstack $argv -o $output
